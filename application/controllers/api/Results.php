<?php
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH.'/libraries/REST_Controller.php';
class Results extends REST_Controller
{
	public function __construct()
    {
        parent::__construct();
        // Configuring limits on our controller methods
        // Created the 'limits' table and 'limits' enabled within application/config/rest.php
        $this->methods['users_get']['limit'] = 500; // 500 requests per hour per user/key
        $this->methods['users_post']['limit'] = 100; // 100 requests per hour per user/key
        $this->methods['users_delete']['limit'] = 50; // 50 requests per hour per user/key
        $this->load->model('exam_result_model');
            
    }
    public function example_get()
    {
        $message = [
            'id' => 100, // Automatically generated by the model
            //'name' => $this->post('name'),
            //'email' => $this->post('email'),
            'message' => 'Added a resource'
        ];
        $this->set_response($message, REST_Controller::HTTP_CREATED);
    }
    public function index_post()
    {
        $id = $this->post('id');
        
        if ($id != NULL) :
            $this->load->model('exam_result_model');
            $result = new exam_result_model();
            $result->stud_id=$id;
            $message = [array('status'=>"Fail",'response'=>"Bad Request")];
            $this->response($message, REST_Controller::HTTP_OK);
        else : 
            $message = [array('status'=>"Fail",'response'=>"Bad Request")];
            $this->response($message, REST_Controller::HTTP_BAD_REQUEST);
        endif;
    }
    public function individual_get()
    {
        $studentid = $this->uri->segment(4, 0);
        
        if ($studentid != 0) :
            $this->load->model('exam_result_model');
            $result = new exam_result_model();
            $result->stud_id=$studentid;
            $this->response($result->get_iresults(), REST_Controller::HTTP_OK);
        else : 
            $message = [array('status'=>"Fail",'response'=>"Bad Request")];
            $this->response($message, REST_Controller::HTTP_BAD_REQUEST);
        endif;
    }
    public function group_get()
    {
        $groupid = $this->uri->segment(4, 0);
        
        if ($groupid != 0) :
            $this->load->model('exam_result_model');
            $result = new exam_result_model();
            $this->response($result->get_gresults($groupid), REST_Controller::HTTP_OK);
        else : 
            $message = [array('status'=>"Fail",'response'=>"Bad Request")];
            $this->response('Error', REST_Controller::HTTP_BAD_REQUEST);
        endif;
    }
    public function submit_post()
    {
        $studentid = $this->uri->segment(4, 0);
        
        if ($studentid != 0) :
            $unit = new exam_result_model();
            //$unit->result_id=$id;
            $unit->stud_id=$studentid;
            $unit->exam_type=$this->input->post('exam_type');
            $unit->unit_id=$this->input->post('unit_id');
            $unit->stud_id=$this->input->post('stud_id');
            $unit->marks=$this->input->post('marks');
            $unit->save(0);
            $message = [array('status'=>"Success",'response'=>"Otimo! Result submitted")];
            $this->response($message, REST_Controller::HTTP_OK);
        else : 
            $message = [array('status'=>"Fail",'response'=>"Bad Request")];
            $this->response($message, REST_Controller::HTTP_BAD_REQUEST);
        endif;
    }
}